{"is_source_file": true, "format": "TypeScript (Angular test/spec file)", "description": "This file contains unit tests for the IntegrationsComponent in an Angular project. It mocks the ApiService, tests component initialization, integration selection, and connection behavior, including handling of API success and failure responses.", "external_files": ["../../shared/api.service", "./integrations.component"], "external_methods": ["ApiService.getIntegrations", "ApiService.connectIntegration", "TestBed.configureTestingModule", "TestBed.createComponent", "TestBed.inject", "fixture.detectChanges", "component.select", "component.connect", "By.css", "expect"], "published": ["IntegrationsComponent", "ApiService", "IntegrationConfig"], "classes": [{"name": "ApiMock", "description": "A mock class implementing the ApiService interface for testing, with spy methods getIntegrations and connectIntegration."}], "methods": [{"name": "getIntegrations", "description": "Spy method that returns an observable of a predefined array of integration configurations for testing."}, {"name": "connectIntegration", "description": "Spy method that simulates connecting an integration and returns an observable of the updated integration configuration."}], "calls": ["ApiService.getIntegrations", "ApiService.connectIntegration", "ComponentFixture.detectChanges", "fixture.debugElement.queryAll", "component.select", "component.connect", "tick", "expect"], "search-terms": ["Angular", "IntegrationsComponent", "unit testing", "mock service", "API call", "connect integration", "Jasmine", "RxJS"], "state": 2, "file_id": 46, "knowledge_revision": 119, "git_revision": "", "revision_history": [{"111": ""}, {"119": ""}], "ctags": [{"_type": "tag", "name": "ApiMock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^class ApiMock {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^  let api: ApiMock;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "component", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^  let component: IntegrationsComponent;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "fixture", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^  let fixture: ComponentFixture<IntegrationsComponent>;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "getIntegrations", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^  getIntegrations = jasmine.createSpy().and.returnValue(of<IntegrationConfig[]>([$/", "language": "TypeScript", "kind": "property", "scope": "ApiMock", "scopeKind": "class"}, {"_type": "tag", "name": "integ", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^    const integ: IntegrationConfig = { id: 'gh', name: 'GitHub', connected: false };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "listSubject", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^    const listSubject = new Subject<IntegrationConfig[]>();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "tiles", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "pattern": "/^    const tiles = fixture.debugElement.queryAll(By.css('.tile'));$/", "language": "TypeScript", "kind": "constant"}], "hash": "5628f8731e1588587feb6fc40674ef70", "format-version": 4, "code-base-name": "devdiary_frontend", "filename": "devdiary_frontend/src/app/features/integrations/integrations.component.spec.ts", "fields": [{"name": "let api: ApiMock;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let component: IntegrationsComponent;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let fixture: ComponentFixture<IntegrationsComponent>;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getIntegrations = jasmine.createSpy().and.returnValue(of<IntegrationConfig[]>([", "scope": "ApiMock", "scopeKind": "class", "description": "unavailable"}]}