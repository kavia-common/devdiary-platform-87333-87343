{"is_source_file": false, "format": "", "description": "", "external_files": [], "external_methods": [], "published": [], "classes": [], "methods": [], "calls": [], "search-terms": [], "state": 2, "file_id": 43, "knowledge_revision": 116, "git_revision": "", "revision_history": [{"107": ""}, {"116": ""}], "ctags": [{"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^  const base = '\\/api';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "entry", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const entry: DiaryEntry = { date: '2025-01-01', text: 'did work' };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "httpMock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^  let httpMock: HttpTestingController;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock: DiaryEntry = { ...entry, id: '1' };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock = { entries7d: 5, activeDays30d: 10, topTag: 'infra' };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock: DiaryEntry = { ...entry, id: '1' };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock: DiaryEntry[] = [{ id: '1', date: '2025-01-02', text: 'x' }];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock: IntegrationConfig = { id: 'gh', name: 'GitHub', connected: true };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock: IntegrationConfig[] = [{ id: 'gh', name: 'GitHub', connected: true }];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const mock: Summary = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(`${base}\\/dashboard\\/stats`);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(`${base}\\/entries`);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(`${base}\\/integrations\\/gh\\/connect`);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(`${base}\\/integrations`);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(`${base}\\/summaries\\/standup`);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(r => r.url === `${base}\\/activity` && r.params.get('limit') =/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    const req = httpMock.expectOne(r => r.url === `${base}\\/entries` && r.params.get('date') ===/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: ActivityItem[] | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: DiaryEntry | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: DiaryEntry[] | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: IntegrationConfig | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: IntegrationConfig[] | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: Record<string, unknown> | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^    let resp: Summary | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "service", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/api.service.spec.ts", "pattern": "/^  let service: ApiService;$/", "language": "TypeScript", "kind": "variable"}], "hash": "2fbfb8d3bae9b434de988afb0e687c01", "format-version": 4, "code-base-name": "devdiary_frontend", "filename": "devdiary_frontend/src/app/shared/api.service.spec.ts", "fields": [{"name": "let httpMock: HttpTestingController;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: ActivityItem[] | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: DiaryEntry | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: DiaryEntry[] | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: IntegrationConfig | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: IntegrationConfig[] | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: Record<string, unknown> | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let resp: Summary | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let service: ApiService;", "scope": "", "scopeKind": "", "description": "unavailable"}]}