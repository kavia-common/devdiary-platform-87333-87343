{"is_source_file": true, "format": "TypeScript (Angular component spec file)", "description": "This file contains unit tests for the DiaryComponent in an Angular frontend application, testing its creation, addition of diary entries, and refresh functionality, with mocks for external service dependencies.", "external_files": ["./diary.component", "../../shared/api.service"], "external_methods": ["ApiService.createEntry", "ApiService.listEntries"], "published": [], "classes": [{"name": "ApiMock", "description": "Mock class for ApiService used in testing to simulate API interactions without real backend calls."}], "methods": [{"name": "addEntry", "description": "Method to add a new diary entry, calling the API mock and updating the entry list upon success."}, {"name": "refresh", "description": "Method to reload diary entries from the API service."}], "calls": ["TestBed.configureTestingModule", "TestBed.createComponent", "fixture.detectChanges", "api.createEntry", "api.listEntries", "component.refresh"], "search-terms": ["DiaryComponent.unitTest", "Angular.spec.ts", "diary entry addition", "MockApiService", "entry refresh"], "state": 2, "file_id": 44, "knowledge_revision": 117, "git_revision": "", "revision_history": [{"109": ""}, {"117": ""}], "ctags": [{"_type": "tag", "name": "ApiMock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^class ApiMock {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^  let api: ApiMock;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "btn", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^    const btn: HTMLButtonElement = fixture.debugElement.query(By.css('.actions .btn-primary')).n/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "component", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^  let component: DiaryComponent;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "createEntry", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^  createEntry = jasmine.createSpy().and.returnValue(of({ id: '1' }));$/", "language": "TypeScript", "kind": "property", "scope": "ApiMock", "scopeKind": "class"}, {"_type": "tag", "name": "fixture", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^  let fixture: ComponentFixture<DiaryComponent>;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "listSubject", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "pattern": "/^    const listSubject = new Subject<DiaryEntry[]>();$/", "language": "TypeScript", "kind": "constant"}], "hash": "595af7145491b74d7982abfca7ebf60a", "format-version": 4, "code-base-name": "devdiary_frontend", "filename": "devdiary_frontend/src/app/features/diary/diary.component.spec.ts", "fields": [{"name": "let api: ApiMock;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let component: DiaryComponent;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "createEntry = jasmine.createSpy().and.returnValue(of({ id: '1' }));", "scope": "ApiMock", "scopeKind": "class", "description": "unavailable"}, {"name": "let fixture: ComponentFixture<DiaryComponent>;", "scope": "", "scopeKind": "", "description": "unavailable"}]}