{"is_source_file": true, "format": "TypeScript (Angular unit test)", "description": "This file contains unit tests for the ActivityFeedComponent in an Angular application, using Jasmine testing framework. It sets up a mock ApiService to simulate API responses and verifies the component's behavior on successful data load and error scenarios.", "external_files": ["./activity-feed.component", "../api.service", "@angular/core/testing", "@angular/platform-browser"], "external_methods": ["TestBed.configureTestingModule", "TestBed.createComponent", "TestBed.inject", "jasmine.createSpy", "of", "throwError", "fakeAsync", "tick", "ComponentFixture.detectChanges", "fixture.debugElement.queryAll"], "published": [], "classes": [], "methods": [{"name": "beforeEach", "description": "Initializes the test environment by configuring the testing module, creating component fixtures, and injecting dependencies."}, {"name": "it", "description": "Defines individual test cases to verify the behavior of ActivityFeedComponent under different conditions."}], "calls": ["ApiMock.getActivityFeed", "TestBed.configureTestingModule", "TestBed.createComponent", "TestBed.inject", "fixture.detectChanges", "api.getActivityFeed", "component.loading", "component.items.length", "fixture.debugElement.queryAll"], "search-terms": ["Angular", "ActivityFeedComponent", "Jasmine", "unit test", "API mocking", "activity feed", "activity-item"], "state": 2, "file_id": 47, "knowledge_revision": 120, "git_revision": "", "revision_history": [{"112": ""}, {"120": ""}], "ctags": [{"_type": "tag", "name": "ApiMock", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "pattern": "/^class ApiMock {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "pattern": "/^  let api: ApiMock;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "component", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "pattern": "/^  let component: ActivityFeedComponent;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "fixture", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "pattern": "/^  let fixture: ComponentFixture<ActivityFeedComponent>;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "getActivityFeed", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "pattern": "/^  getActivityFeed = jasmine.createSpy().and.returnValue(of<ActivityItem[]>([$/", "language": "TypeScript", "kind": "property", "scope": "ApiMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/devdiary-platform-87333-87343/devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "pattern": "/^    const items = fixture.debugElement.queryAll(By.css('.item'));$/", "language": "TypeScript", "kind": "constant"}], "hash": "6fa85df361d8deac2c84f7a0966d8c4a", "format-version": 4, "code-base-name": "devdiary_frontend", "filename": "devdiary_frontend/src/app/shared/activity-feed/activity-feed.component.spec.ts", "fields": [{"name": "let api: ApiMock;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let component: ActivityFeedComponent;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let fixture: ComponentFixture<ActivityFeedComponent>;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getActivityFeed = jasmine.createSpy().and.returnValue(of<ActivityItem[]>([", "scope": "ApiMock", "scopeKind": "class", "description": "unavailable"}]}